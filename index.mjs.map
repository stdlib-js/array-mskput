{"version":3,"file":"index.mjs","sources":["../lib/validate.js","../lib/main.js","../lib/defaults.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { factory as contains } from '@stdlib/array-base-assert-contains';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// VARIABLES //\n\nvar MODES = [\n\t'strict',\n\t'non_strict',\n\t'strict_broadcast',\n\t'broadcast',\n\t'repeat'\n];\nvar isMode = contains( MODES );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.mode] - mode option\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'mode': 'strict'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'null2V', options ) );\n\t}\n\tif ( hasOwnProp( options, 'mode' ) ) {\n\t\topts.mode = options.mode;\n\t\tif ( !isMode( opts.mode ) ) {\n\t\t\treturn new TypeError( format( 'null4S', 'mode', MODES.join( '\", \"' ), opts.mode ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isMostlySafeCast from '@stdlib/array-base-assert-is-mostly-safe-data-type-cast';\nimport isRealDataType from '@stdlib/array-base-assert-is-real-data-type';\nimport isComplexDataType from '@stdlib/array-base-assert-is-complex-floating-point-data-type';\nimport isCollection from '@stdlib/assert-is-collection';\nimport base from '@stdlib/array-base-mskput';\nimport dtype from '@stdlib/array-dtype';\nimport convert from '@stdlib/array-convert';\nimport format from '@stdlib/error-tools-fmtprodmsg';\nimport defaults from './defaults.js';\nimport validate from './validate.js';\n\n\n// MAIN //\n\n/**\n* Replaces elements of an array with provided values according to a provided mask array.\n*\n* @param {Collection} x - input array\n* @param {Collection} mask - mask array\n* @param {Collection} values - values to set\n* @param {Options} [options] - function options\n* @param {string} [options.mode='repeat'] - string specifying behavior when the number of values does not equal the number of falsy mask values\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a collection\n* @throws {TypeError} third argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {Error} must provide valid options\n* @throws {Error} insufficient values to satisfy mask array\n* @throws {Error} number of values does not equal the number of falsy mask values\n* @throws {TypeError} third argument cannot be safely cast to the data type of the first argument\n* @returns {Collection} input array\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n*\n* var mask = [ 1, 0, 0, 1 ];\n* var values = [ 20, 30 ];\n*\n* var out = mskput( x, mask, values );\n* // returns [ 1, 20, 30, 4 ]\n*\n* var bool = ( out === x );\n* // returns true\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n*\n* var mask = [ 1, 0, 0, 1 ];\n* var values = [ 30 ];\n*\n* var out = mskput( x, mask, values );\n* // returns [ 1, 30, 30, 4 ]\n*\n* var bool = ( out === x );\n* // returns true\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n*\n* var mask = [ 0, 0, 1, 0 ];\n* var values = [ 20, 30 ];\n*\n* var out = mskput( x, mask, values );\n* // returns [ 20, 30, 3, 20 ]\n*\n* var bool = ( out === x );\n* // returns true\n*/\nfunction mskput( x, mask, values ) {\n\tvar opts;\n\tvar err;\n\tvar xdt;\n\tvar vdt;\n\tif ( !isCollection( x ) ) {\n\t\tthrow new TypeError( format( 'null2O', x ) );\n\t}\n\tif ( !isCollection( mask ) ) {\n\t\tthrow new TypeError( format( 'null2y', mask ) );\n\t}\n\tif ( !isCollection( values ) ) {\n\t\tthrow new TypeError( format( 'null2l', values ) );\n\t}\n\topts = defaults();\n\tif ( arguments.length > 3 ) {\n\t\terr = validate( opts, arguments[ 3 ] );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\txdt = dtype( x ) || 'generic';\n\tvdt = dtype( values ) || 'generic';\n\n\t// Safe casts are always allowed and allow same kind casts (i.e., downcasts) only when the input array data type is floating-point...\n\tif ( !isMostlySafeCast( vdt, xdt ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument cannot be safely cast to the input array data type. Data types: [%s, %s].', vdt, xdt ) );\n\t}\n\t// When performing a real-to-complex assignment, interpret the real-valued array as containing real components with implied imaginary components equal to zero and explicitly convert to a complex-valued array...\n\tif ( isComplexDataType( xdt ) && isRealDataType( vdt ) ) {\n\t\tvalues = convert( values, xdt );\n\t}\n\t// Replace values in the input array:\n\treturn base( x, mask, values, opts.mode );\n}\n\n\n// EXPORTS //\n\nexport default mskput;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*\n* @example\n* var o = defaults();\n* // returns {...}\n*/\nfunction defaults() {\n\treturn {\n\t\t'mode': 'repeat'\n\t};\n}\n\n\n// EXPORTS //\n\nexport default defaults;\n"],"names":["MODES","isMode","contains","mskput","x","mask","values","opts","err","xdt","vdt","isCollection","TypeError","format","mode","arguments","length","options","isObject","hasOwnProp","join","validate","dtype","isMostlySafeCast","isComplexDataType","isRealDataType","convert","base"],"mappings":";;8lCA8BA,IAAIA,EAAQ,CACX,SACA,aACA,mBACA,YACA,UAEGC,EAASC,EAAUF,GCqDvB,SAASG,EAAQC,EAAGC,EAAMC,GACzB,IAAIC,EACAC,EACAC,EACAC,EACJ,IAAMC,EAAcP,GACnB,MAAM,IAAIQ,UAAWC,EAAQ,SAAUT,IAExC,IAAMO,EAAcN,GACnB,MAAM,IAAIO,UAAWC,EAAQ,SAAUR,IAExC,IAAMM,EAAcL,GACnB,MAAM,IAAIM,UAAWC,EAAQ,SAAUP,IAGxC,GADAC,ECvEO,CACNO,KAAQ,UDuEJC,UAAUC,OAAS,IACvBR,ED7CF,SAAmBD,EAAMU,GACxB,OAAMC,EAAUD,GAGXE,EAAYF,EAAS,UACzBV,EAAKO,KAAOG,EAAQH,MACdb,EAAQM,EAAKO,OACX,IAAIF,UAAWC,EAAQ,SAAU,OAAQb,EAAMoB,KAAM,QAAUb,EAAKO,OAGtE,KARC,IAAIF,UAAWC,EAAQ,SAAUI,GAS1C,CCkCQI,CAAUd,EAAMQ,UAAW,IAC5BP,GACJ,MAAMA,EAOR,GAJAC,EAAMa,EAAOlB,IAAO,UACpBM,EAAMY,EAAOhB,IAAY,WAGnBiB,EAAkBb,EAAKD,GAC5B,MAAM,IAAIG,UAAWC,EAAQ,6GAA8GH,EAAKD,IAOjJ,OAJKe,EAAmBf,IAASgB,EAAgBf,KAChDJ,EAASoB,EAASpB,EAAQG,IAGpBkB,EAAMvB,EAAGC,EAAMC,EAAQC,EAAKO,KACpC"}